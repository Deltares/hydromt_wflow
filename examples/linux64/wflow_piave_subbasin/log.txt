[ Info: Wflow version `v0.8.1`
[ Info: Initialize model variables for model type `sbm`.
[ Info: Cyclic parameters are provided by `staticmaps.nc`.
[ Info: Forcing parameters are provided by `inmaps.nc`.
[ Info: Set `vertical.precipitation` using netCDF variable `precip` as forcing parameter.
[ Info: Set `vertical.temperature` using netCDF variable `temp` as forcing parameter.
[ Info: Set `vertical.potential_evaporation` using netCDF variable `pet` as forcing parameter.
[ Info: Set `vertical.leaf_area_index` using netCDF variable `LAI` as cyclic parameter, with `12` timesteps.
┌ Info: General model settings
│   reservoirs = true
│   lakes = true
│   snow = true
│   masswasting = true
└   glacier = true
[ Info: Set `subcatchment` using netCDF variable `wflow_subcatch`.
[ Info: Set `river_location` using netCDF variable `wflow_river`.
[ Info: Set `lateral.river.width` using netCDF variable `wflow_riverwidth`.
[ Info: Set `lateral.river.length` using netCDF variable `wflow_riverlength`.
[ Info: Set `vertical.cfmax` using netCDF variable `Cfmax`.
[ Info: Set `vertical.tt` using netCDF variable `TT`.
[ Info: Set `vertical.tti` using netCDF variable `TTI`.
[ Info: Set `vertical.ttm` using netCDF variable `TTM`.
[ Info: Set `vertical.whc` using default value `0.1`.
[ Info: Set `vertical.w_soil` using default value `0.1125`.
[ Info: Set `vertical.cf_soil` using netCDF variable `cf_soil`.
[ Info: Set `vertical.g_tt` using netCDF variable `G_TT`.
[ Info: Set `vertical.g_cfmax` using netCDF variable `G_Cfmax`.
[ Info: Set `vertical.g_sifrac` using netCDF variable `G_SIfrac`.
[ Info: Set `vertical.glacierfrac` using netCDF variable `wflow_glacierfrac`.
[ Info: Set `vertical.glacierstore` using netCDF variable `wflow_glacierstore`.
[ Info: Set `vertical.theta_s` using netCDF variable `thetaS`.
[ Info: Set `vertical.theta_r` using netCDF variable `thetaR`.
[ Info: Set `vertical.kv_0` using netCDF variable `KsatVer`.
[ Info: Set `vertical.f` using netCDF variable `f`.
[ Info: Set `vertical.hb` using default value `-10.0`.
[ Info: Set `vertical.h1` using default value `0.0`.
[ Info: Set `vertical.h2` using default value `-100.0`.
[ Info: Set `vertical.h3_high` using default value `-400.0`.
[ Info: Set `vertical.h3_low` using default value `-1000.0`.
[ Info: Set `vertical.h4` using default value `-15849.0`.
[ Info: Set `vertical.alpha_h1` using netCDF variable `alpha_h1`.
[ Info: Set `vertical.soilthickness` using netCDF variable `SoilThickness`.
[ Info: Set `vertical.infiltcappath` using netCDF variable `InfiltCapPath`.
[ Info: Set `vertical.infiltcapsoil` using netCDF variable `InfiltCapSoil`.
[ Info: Set `vertical.maxleakage` using netCDF variable `MaxLeakage`.
[ Info: Set `vertical.c` using netCDF variable `c`.
[ Info: Set `vertical.kvfrac` using default value `1.0`.
[ Info: Set `vertical.waterfrac` using netCDF variable `WaterFrac`.
[ Info: Set `vertical.pathfrac` using netCDF variable `PathFrac`.
[ Info: Set `vertical.rootingdepth` using netCDF variable `RootingDepth`.
[ Info: Set `vertical.rootdistpar` using netCDF variable `rootdistpar`.
[ Info: Set `vertical.cap_hmax` using default value `2000.0`.
[ Info: Set `vertical.cap_n` using default value `2.0`.
[ Info: Set `vertical.kc` using default value `1.0`.
[ Info: Set `vertical.specific_leaf` using netCDF variable `Sl`.
[ Info: Set `vertical.storage_wood` using netCDF variable `Swood`.
[ Info: Set `vertical.kext` using netCDF variable `Kext`.
[ Info: Set `lateral.river.reservoir.locs` using netCDF variable `wflow_reservoirlocs`.
[ Info: Set `lateral.river.reservoir.areas` using netCDF variable `wflow_reservoirareas`.
[ Info: Set `lateral.river.reservoir.demand` using netCDF variable `ResDemand`.
[ Info: Set `lateral.river.reservoir.maxrelease` using netCDF variable `ResMaxRelease`.
[ Info: Set `lateral.river.reservoir.maxvolume` using netCDF variable `ResMaxVolume`.
[ Info: Set `lateral.river.reservoir.area` using netCDF variable `ResSimpleArea`.
[ Info: Set `lateral.river.reservoir.targetfullfrac` using netCDF variable `ResTargetFullFrac`.
[ Info: Set `lateral.river.reservoir.targetminfrac` using netCDF variable `ResTargetMinFrac`.
[ Info: Read `2` reservoir locations.
[ Info: Set `lateral.river.lake.locs` using netCDF variable `wflow_lakelocs`.
[ Info: Set `lateral.river.lake.areas` using netCDF variable `wflow_lakeareas`.
[ Info: Set `lateral.river.lake.area` using netCDF variable `LakeArea`.
[ Info: Set `lateral.river.lake.b` using netCDF variable `Lake_b`.
[ Info: Set `lateral.river.lake.e` using netCDF variable `Lake_e`.
[ Info: Set `lateral.river.lake.threshold` using netCDF variable `LakeThreshold`.
[ Info: Set `lateral.river.lake.linkedlakelocs` using netCDF variable `LinkedLakeLocs`.
[ Info: Set `lateral.river.lake.storfunc` using netCDF variable `LakeStorFunc`.
[ Info: Set `lateral.river.lake.outflowfunc` using netCDF variable `LakeOutflowFunc`.
[ Info: Set `lateral.river.lake.waterlevel` using netCDF variable `LakeAvgLevel`.
[ Info: Read `1` lake locations.
[ Info: Set `ldd` using netCDF variable `wflow_ldd`.
[ Info: Set `lateral.land.slope` using netCDF variable `Slope`.
[ Info: Set `lateral.subsurface.ksathorfrac` using default value `10`.
┌ Info: Kinematic wave approach is used for overland flow.
└   iterate = true
[ Info: Using a fixed sub-timestep (seconds) 3600 for kinematic wave overland flow.
[ Info: Set `lateral.land.n` using netCDF variable `N`.
┌ Info: Kinematic wave approach is used for river flow.
└   iterate = true
[ Info: Using a fixed sub-timestep (seconds) 900 for kinematic wave river flow.
[ Info: Set `lateral.river.n` using netCDF variable `N_River`.
[ Info: Set `lateral.river.bankfull_depth` using netCDF variable `RiverDepth`.
[ Info: Set `lateral.river.slope` using netCDF variable `RiverSlope`.
[ Info: Create a state output netCDF file `run_results/outstate/outstates2.nc`.
[ Info: Create an output CSV file `run_results/output2.csv` for scalar data.
[ Info: Set `gauges_grdc` using netCDF variable `wflow_gauges_grdc`.
[ Info: Set `gauges_grdc` using netCDF variable `wflow_gauges_grdc`.
┌ Info: Adding scalar output for a map with a reducer function.
│   fileformat = "CSV"
│   param = "lateral.river.q_av"
│   mapname = "gauges_grdc"
└   reducer_name = "only"
[ Info: Set initial conditions from default values.
[ Info: Initialized model
┌ Warning: The definition of `starttime` has changed (equal to model state time).
│  Please update your settings TOML file by subtracting one model timestep dt from the `starttime`, if it was used with a Wflow version up to v0.6.3.
└ @ Wflow ~/Wflow.jl-0.8.1/src/Wflow.jl:222
┌ Info: Run information
│   model_type = "sbm"
│   starttime = CFTime.DateTimeProlepticGregorian(2010-02-02T00:00:00)
│   dt = 86400 seconds
│   endtime = CFTime.DateTimeProlepticGregorian(2010-02-10T00:00:00)
└   nthreads() = 1
[ Info: Simulation duration: 106 milliseconds
[ Info: Write output states to netCDF file `run_results/outstate/outstates2.nc`.
